{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.9", "generated_at": "2025-08-20T20:18:06.423864Z", "invocation_id": "e703d9bf-b51c-4635-b22b-8c2d81d96129", "invocation_started_at": "2025-08-20T20:18:04.682649Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.117088Z", "completed_at": "2025-08-20T20:18:06.139573Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.140616Z", "completed_at": "2025-08-20T20:18:06.140644Z"}], "thread_id": "Thread-1", "execution_time": 0.0254213809967041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.stg_eventos_manutencao", "compiled": true, "compiled_code": "-- stg_eventos_manutencao.sql\n-- Objetivo: expor eventos de manuten\u00e7\u00e3o a partir de Parquet no bucket 'processed'.\n-- Gr\u00e3o: 1 linha por evento (id_evento).\n-- Origem: s3://processed/eventos_manutencao.parquet\n\n\n\nselect *\nfrom parquet_scan('s3://processed/eventos_manutencao.parquet')", "relation_name": "\"duckdb_pipeline\".\"main\".\"stg_eventos_manutencao\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.144929Z", "completed_at": "2025-08-20T20:18:06.152683Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.153597Z", "completed_at": "2025-08-20T20:18:06.153622Z"}], "thread_id": "Thread-1", "execution_time": 0.010703086853027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.stg_maquinas", "compiled": true, "compiled_code": "-- stg_maquinas.sql\n-- Objetivo: expor cadastro de m\u00e1quinas a partir de Parquet no bucket 'processed'.\n-- Gr\u00e3o: 1 linha por m\u00e1quina (id_maquina).\n-- Origem: s3://processed/maquinas.parquet\n\n\n\nselect *\nfrom parquet_scan('s3://processed/maquinas.parquet')", "relation_name": "\"duckdb_pipeline\".\"main\".\"stg_maquinas\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.158169Z", "completed_at": "2025-08-20T20:18:06.165863Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.166670Z", "completed_at": "2025-08-20T20:18:06.166692Z"}], "thread_id": "Thread-1", "execution_time": 0.010858774185180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.stg_sensores", "compiled": true, "compiled_code": "-- stg_sensores.sql\n-- Objetivo: expor leituras de sensores a partir de Parquet no bucket 'processed'.\n-- Gr\u00e3o: 1 linha por leitura (timestamp, id_maquina).\n-- Origem: s3://processed/sensores.parquet\n\n\n\nselect *\nfrom parquet_scan('s3://processed/sensores.parquet')", "relation_name": "\"duckdb_pipeline\".\"main\".\"stg_sensores\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.170633Z", "completed_at": "2025-08-20T20:18:06.175556Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.176461Z", "completed_at": "2025-08-20T20:18:06.176488Z"}], "thread_id": "Thread-1", "execution_time": 0.007652759552001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.agg_eventos_hora", "compiled": true, "compiled_code": "-- agg_eventos_hora.sql\n-- Objetivo: agrega\u00e7\u00f5es de eventos por m\u00e1quina-hora (contagens e flags).\n-- Gr\u00e3o: 1 linha por id_maquina e timestamp_hour.\n\n\n\nwith base as (\n  select\n    e.id_maquina,\n    date_trunc('hour', cast(e.data_evento as timestamp)) as timestamp_hour,\n    e.tipo_evento\n  from \"duckdb_pipeline\".\"main\".\"stg_eventos_manutencao\" e\n)\n\nselect\n  id_maquina,\n  timestamp_hour,\n  count(*) as eventos_total,\n  sum(case when lower(tipo_evento) = 'preventiva' then 1 else 0 end) as eventos_preventiva,\n  sum(case when lower(tipo_evento) = 'corretiva' then 1 else 0 end)   as eventos_corretiva,\n  sum(case when lower(tipo_evento) in ('inspe\u00e7\u00e3o','inspecao') then 1 else 0 end) as eventos_inspecao,\n  case when count(*) > 0 then 1 else 0 end as flag_evento\nfrom base\ngroup by 1,2", "relation_name": "\"duckdb_pipeline\".\"main\".\"agg_eventos_hora\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.181062Z", "completed_at": "2025-08-20T20:18:06.192346Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.193324Z", "completed_at": "2025-08-20T20:18:06.193354Z"}], "thread_id": "Thread-1", "execution_time": 0.014350652694702148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.dim_tempo", "compiled": true, "compiled_code": "-- dim_tempo.sql\n-- Objetivo: dimens\u00e3o de tempo por hora derivada dos timestamps de eventos.\n-- Observa\u00e7\u00e3o: horas sem eventos podem n\u00e3o aparecer (sensores podem ter horas extras).\n\nwith eventos as (\n  select distinct\n    date_trunc('hour', cast(data_evento as timestamp)) as timestamp_hour,\n    cast(data_evento as timestamp) as data_evento\n  from \"duckdb_pipeline\".\"main\".\"stg_eventos_manutencao\"\n)\n\nselect\n  timestamp_hour,\n  extract(year  from timestamp_hour) as ano,\n  extract(month from timestamp_hour) as mes,\n  extract(day   from timestamp_hour) as dia,\n  extract(hour  from timestamp_hour) as hora\nfrom eventos", "relation_name": "\"duckdb_pipeline\".\"main\".\"dim_tempo\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.198375Z", "completed_at": "2025-08-20T20:18:06.207384Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.208480Z", "completed_at": "2025-08-20T20:18:06.208506Z"}], "thread_id": "Thread-1", "execution_time": 0.01270437240600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.dim_maquina", "compiled": true, "compiled_code": "-- dim_maquina.sql\n-- Objetivo: dimens\u00e3o de m\u00e1quinas com atributos descritivos.\n-- Gr\u00e3o: 1 linha por id_maquina (SCD Tipo 0 no escopo atual).\n\n\n\nselect\n  id_maquina,\n  tipo,\n  localizacao\nfrom \"duckdb_pipeline\".\"main\".\"stg_maquinas\"", "relation_name": "\"duckdb_pipeline\".\"main\".\"dim_maquina\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.214182Z", "completed_at": "2025-08-20T20:18:06.223416Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.224364Z", "completed_at": "2025-08-20T20:18:06.224390Z"}], "thread_id": "Thread-1", "execution_time": 0.012672901153564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.agg_sensores_hora", "compiled": true, "compiled_code": "-- agg_sensores_hora.sql\n-- Objetivo: agrega\u00e7\u00f5es de sensores por m\u00e1quina-hora (reduz granularidade para consumo em dashboards).\n-- Gr\u00e3o: 1 linha por id_maquina e timestamp_hour.\n\n\n\nwith base as (\n  select\n    s.id_maquina,\n    date_trunc('hour', cast(s.timestamp as timestamp)) as timestamp_hour,\n    s.temperatura_c,\n    s.pressao_psi,\n    s.vibracao_mm_s\n  from \"duckdb_pipeline\".\"main\".\"stg_sensores\" s\n)\n\nselect\n  id_maquina,\n  timestamp_hour,\n  avg(temperatura_c) as temp_avg,\n  max(temperatura_c) as temp_max,\n  avg(pressao_psi) as pressao_avg,\n  quantile(pressao_psi, 0.95) as pressao_p95,\n  avg(vibracao_mm_s) as vibracao_avg,\n  max(vibracao_mm_s) as vibracao_max\nfrom base\ngroup by 1,2", "relation_name": "\"duckdb_pipeline\".\"main\".\"agg_sensores_hora\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.229448Z", "completed_at": "2025-08-20T20:18:06.260637Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.261140Z", "completed_at": "2025-08-20T20:18:06.261170Z"}], "thread_id": "Thread-1", "execution_time": 0.03419375419616699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_agg_eventos_hora_id_maquina.eb43429687", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_maquina\nfrom \"duckdb_pipeline\".\"main\".\"agg_eventos_hora\"\nwhere id_maquina is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.264764Z", "completed_at": "2025-08-20T20:18:06.273368Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.274332Z", "completed_at": "2025-08-20T20:18:06.274361Z"}], "thread_id": "Thread-1", "execution_time": 0.01119089126586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_agg_eventos_hora_timestamp_hour.4dbe846e44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp_hour\nfrom \"duckdb_pipeline\".\"main\".\"agg_eventos_hora\"\nwhere timestamp_hour is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.277224Z", "completed_at": "2025-08-20T20:18:06.284152Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.284932Z", "completed_at": "2025-08-20T20:18:06.284954Z"}], "thread_id": "Thread-1", "execution_time": 0.009176015853881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.fato_sensores", "compiled": true, "compiled_code": "-- fato_sensores.sql\n-- Objetivo: fato de sensores, associada a tempo por hora.\n-- Gr\u00e3o: 1 linha por leitura (ap\u00f3s trunc para hora podem existir m\u00faltiplas linhas por m\u00e1quina-hora).\n\nselect\n  t.timestamp_hour,\n  s.id_maquina,\n  s.temperatura_c,\n  s.pressao_psi,\n  s.vibracao_mm_s\nfrom \"duckdb_pipeline\".\"main\".\"dim_tempo\" t\njoin \"duckdb_pipeline\".\"main\".\"stg_sensores\" s\n  on date_trunc('hour', cast(s.timestamp as timestamp)) = t.timestamp_hour", "relation_name": "\"duckdb_pipeline\".\"main\".\"fato_sensores\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.288269Z", "completed_at": "2025-08-20T20:18:06.295510Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.296069Z", "completed_at": "2025-08-20T20:18:06.296090Z"}], "thread_id": "Thread-1", "execution_time": 0.009437322616577148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_dim_tempo_mes.e5c1450972", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mes\nfrom \"duckdb_pipeline\".\"main\".\"dim_tempo\"\nwhere mes is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.299013Z", "completed_at": "2025-08-20T20:18:06.307816Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.308294Z", "completed_at": "2025-08-20T20:18:06.308315Z"}], "thread_id": "Thread-1", "execution_time": 0.010622978210449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.fato_eventos", "compiled": true, "compiled_code": "-- fato_eventos.sql\n-- Objetivo: fato de eventos, juntando tempo (hora) e m\u00e1quina.\n-- Gr\u00e3o: 1 linha por evento (id_evento).\n\nselect\n  t.timestamp_hour,\n  e.id_evento,\n  m.id_maquina,\n  e.tipo_evento,\n  e.descricao\nfrom \"duckdb_pipeline\".\"main\".\"dim_tempo\" t\njoin \"duckdb_pipeline\".\"main\".\"stg_eventos_manutencao\" e\n  on date_trunc('hour', cast(e.data_evento as timestamp)) = t.timestamp_hour\njoin \"duckdb_pipeline\".\"main\".\"dim_maquina\" m\n  on e.id_maquina = m.id_maquina", "relation_name": "\"duckdb_pipeline\".\"main\".\"fato_eventos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.311793Z", "completed_at": "2025-08-20T20:18:06.318580Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.319164Z", "completed_at": "2025-08-20T20:18:06.319187Z"}], "thread_id": "Thread-1", "execution_time": 0.00942087173461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_dim_maquina_id_maquina.f640fca163", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_maquina\nfrom \"duckdb_pipeline\".\"main\".\"dim_maquina\"\nwhere id_maquina is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.322241Z", "completed_at": "2025-08-20T20:18:06.329482Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.330283Z", "completed_at": "2025-08-20T20:18:06.330306Z"}], "thread_id": "Thread-1", "execution_time": 0.009716033935546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.pipeline_manutencao.fato_operacional", "compiled": true, "compiled_code": "-- fato_operacional.sql\n-- Objetivo: fato derivada por m\u00e1quina-hora, combinando m\u00e9tricas agregadas de sensores e eventos.\n-- Gr\u00e3o: 1 linha por id_maquina e timestamp_hour (machine-hour).\n-- Observa\u00e7\u00e3o: dim_tempo deriva de eventos (pode faltar hora s\u00f3 com sensores). Usado FULL JOIN entre agrega\u00e7\u00f5es e LEFT nas dimens\u00f5es.\n\n\n\nwith tempo as (\n  select\n    t.timestamp_hour,\n    t.ano,\n    t.mes,\n    t.dia,\n    t.hora\n  from \"duckdb_pipeline\".\"main\".\"dim_tempo\" t\n),\nmaquina as (\n  select\n    m.id_maquina,\n    m.tipo,\n    m.localizacao\n  from \"duckdb_pipeline\".\"main\".\"dim_maquina\" m\n),\ns as (select * from \"duckdb_pipeline\".\"main\".\"agg_sensores_hora\"),\ne as (select * from \"duckdb_pipeline\".\"main\".\"agg_eventos_hora\"),\n\njoined as (\n  select\n    coalesce(s.timestamp_hour, e.timestamp_hour) as timestamp_hour,\n    coalesce(s.id_maquina, e.id_maquina) as id_maquina,\n    s.temp_avg, s.temp_max, s.pressao_avg, s.pressao_p95, s.vibracao_avg, s.vibracao_max,\n    e.eventos_total, e.eventos_preventiva, e.eventos_corretiva, e.eventos_inspecao, e.flag_evento\n  from s\n  full outer join e\n    on s.id_maquina = e.id_maquina\n   and s.timestamp_hour = e.timestamp_hour\n)\n\nselect\n  j.timestamp_hour,\n  j.id_maquina,\n  -- chaves de navega\u00e7\u00e3o\n  j.timestamp_hour as fk_timestamp_hour,\n  j.id_maquina     as fk_id_maquina,\n\n  -- m\u00e9tricas sensores\n  j.temp_avg,\n  j.temp_max,\n  j.pressao_avg,\n  j.pressao_p95,\n  j.vibracao_avg,\n  j.vibracao_max,\n\n  -- m\u00e9tricas eventos (com default 0)\n  coalesce(j.eventos_total, 0) as eventos_total,\n  coalesce(j.eventos_preventiva, 0) as eventos_preventiva,\n  coalesce(j.eventos_corretiva, 0) as eventos_corretiva,\n  coalesce(j.eventos_inspecao, 0) as eventos_inspecao,\n  coalesce(j.flag_evento, 0) as flag_evento,\n\n  -- atributos de dimens\u00f5es (opcionalmente desnormalizados)\n  t.ano, t.mes, t.dia, t.hora,\n  m.tipo as tipo_maquina,\n  m.localizacao as localizacao_maquina\n\nfrom joined j\nleft join tempo t\n  on j.timestamp_hour = t.timestamp_hour\nleft join maquina m\n  on j.id_maquina = m.id_maquina", "relation_name": "\"duckdb_pipeline\".\"main\".\"fato_operacional\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.334665Z", "completed_at": "2025-08-20T20:18:06.342005Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.342911Z", "completed_at": "2025-08-20T20:18:06.342950Z"}], "thread_id": "Thread-1", "execution_time": 0.010689020156860352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_agg_sensores_hora_id_maquina.14b0c5cc0b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_maquina\nfrom \"duckdb_pipeline\".\"main\".\"agg_sensores_hora\"\nwhere id_maquina is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.346876Z", "completed_at": "2025-08-20T20:18:06.355417Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.356469Z", "completed_at": "2025-08-20T20:18:06.356494Z"}], "thread_id": "Thread-1", "execution_time": 0.011670112609863281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_agg_sensores_hora_timestamp_hour.5351234407", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp_hour\nfrom \"duckdb_pipeline\".\"main\".\"agg_sensores_hora\"\nwhere timestamp_hour is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.361436Z", "completed_at": "2025-08-20T20:18:06.371183Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.371748Z", "completed_at": "2025-08-20T20:18:06.371775Z"}], "thread_id": "Thread-1", "execution_time": 0.013043880462646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_fato_sensores_id_maquina.4c44e20086", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_maquina\nfrom \"duckdb_pipeline\".\"main\".\"fato_sensores\"\nwhere id_maquina is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.376237Z", "completed_at": "2025-08-20T20:18:06.385671Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.386587Z", "completed_at": "2025-08-20T20:18:06.386611Z"}], "thread_id": "Thread-1", "execution_time": 0.01297140121459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_fato_eventos_id_evento.7d8cc2d6e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_evento\nfrom \"duckdb_pipeline\".\"main\".\"fato_eventos\"\nwhere id_evento is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.390647Z", "completed_at": "2025-08-20T20:18:06.403748Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.404832Z", "completed_at": "2025-08-20T20:18:06.404863Z"}], "thread_id": "Thread-1", "execution_time": 0.016320228576660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_fato_operacional_id_maquina.b511986b65", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_maquina\nfrom \"duckdb_pipeline\".\"main\".\"fato_operacional\"\nwhere id_maquina is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-20T20:18:06.409346Z", "completed_at": "2025-08-20T20:18:06.419673Z"}, {"name": "execute", "started_at": "2025-08-20T20:18:06.420467Z", "completed_at": "2025-08-20T20:18:06.420489Z"}], "thread_id": "Thread-1", "execution_time": 0.01346135139465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.pipeline_manutencao.not_null_fato_operacional_timestamp_hour.631cd568bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp_hour\nfrom \"duckdb_pipeline\".\"main\".\"fato_operacional\"\nwhere timestamp_hour is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.6107950210571289, "args": {"printer_width": 80, "require_resource_names_without_spaces": true, "send_anonymous_usage_stats": true, "source_freshness_run_project_hooks": true, "state_modified_compare_vars": false, "require_nested_cumulative_type_params": false, "show_resource_report": false, "compile": true, "defer": false, "indirect_selection": "eager", "project_dir": "/dbt_project", "vars": {}, "version_check": true, "select": [], "upload_to_artifacts_ingest_api": false, "strict_mode": false, "partial_parse_file_diff": true, "favor_state": false, "cache_selected_only": false, "static": false, "require_generic_test_arguments_property": true, "log_file_max_bytes": 10485760, "static_parser": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "which": "generate", "use_colors_file": true, "empty_catalog": false, "profiles_dir": "/dbt_project", "macro_debugging": false, "skip_nodes_if_on_run_start_fails": false, "state_modified_compare_more_unrendered_values": false, "log_path": "/dbt_project/logs", "log_format": "default", "validate_macro_args": false, "use_fast_test_edges": false, "write_json": true, "require_yaml_configuration_for_mf_time_spines": false, "show_all_deprecations": false, "log_level_file": "debug", "introspect": true, "require_batched_execution_for_custom_microbatch_strategy": false, "populate_cache": true, "use_colors": true, "log_format_file": "debug", "invocation_command": "dbt docs generate --profiles-dir /dbt_project --project-dir /dbt_project", "partial_parse": true, "exclude": [], "print": true, "require_all_warnings_handled_by_warn_error": false, "require_explicit_package_overrides_for_builtin_materializations": true, "quiet": false, "log_level": "info"}}